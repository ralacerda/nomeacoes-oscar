---
import { getAwardName, getMovie } from "@/utils/getData";
import AwardList from "./AwardList.astro";

export interface Props {
  imdbID: string;
  currentAward: string;
}

const { imdbID, currentAward } = Astro.props;

const movie = getMovie(imdbID);

const hasTranslatedName =
  movie.title.toLowerCase() != movie.local_title.toLowerCase() ? true : false;
---

<div class="card">
  <img src={movie.poster} class="poster" />
  <div class="info">
    <div>
      <h2 class="title">
        <a href={`/movie/${movie.imdbID}`}>{movie.local_title}</a>
      </h2>
      <p>{hasTranslatedName && movie.title}</p>
      <p>
        <span class="runtime">{movie.runtime}</span>
      </p>
    </div>
  </div>
  <div class="indications">
    <p>Outras indicações:</p>
    <AwardList
      awardList={movie.awards.filter((award) => award.id != currentAward)}
      oscarYear={movie.oscarYear}
    />
  </div>
</div>

<style lang="scss">
  .card {
    margin: calc(var(--spacing) * 2) 0;
    padding: calc(var(--spacing) * 2) var(--block-spacing-horizontal);
    border-radius: var(--border-radius);
    background: var(--card-background-color);
    box-shadow: var(--card-box-shadow);

    display: grid;
    /* grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); */
    grid-template-columns: auto 1fr;
    grid-template-areas:
      "poster info"
      "poster indications";
    align-items: flex-start;

    gap: var(--block-spacing-horizontal);
  }

  .poster {
    grid-area: poster;
  }

  .indications {
    grid-area: indications;
  }

  .info {
    grid-area: info;
  }

  .card,
  .title {
    --typography-spacing-vertical: 0.2rem;
  }

  .runtime {
    border-radius: 0.2rem;
    padding: 0.1rem 0.2rem;
    font-size: 0.6rem;
    border: 1px solid currentColor;
  }
</style>
